# This references the default nodejs container from
# the Docker Hub: https://registry.hub.docker.com/_/node/
# If you want Nodesource's container you would reference nodesource/node
# Read more about containers on our dev center
# https://devcenter.wercker.com/overview-and-core-concepts/containers/
box: debian
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# https://devcenter.wercker.com/development/pipelines/

# You can also use services such as databases. Read more on our dev center:
# https://devcenter.wercker.com/administration/services/
# services:
    # - postgres
    # https://devcenter.wercker.com/administration/services/examples/postgresql/

    # - mongo
    # https://devcenter.wercker.com/administration/services/examples/mongodb/
build:
  steps:
    - internal/docker-build:
        dockerfile: Dockerfile
        # image-name: $WERCKER_GIT_BRANCH-$WERCKER_GIT_COMMIT
        image-name: ${DOCKER_REGISTRY}/${DOCKER_REPO}:latest
        # ports: 6394
        registry-auth-config: |
            {
                "docker-nexus.labgpi.it": {
                    "username": "oracle.cloud",
                    "password": "ivanbenegiamo"
                }
            }
# Call database api to stop the running node
  steps:
    - oci-dbservice-stop-node:
      command: stop
      region: eu-frankfurt-1
      tenancy-ocid: ocid1.tenancy.oc1..aaaaaaaa2jvfyfoc6c4fzxayx4tnisw4tgdmualsijeglyul4llarzkq2zna
      user-ocid: ocid1.user.oc1..aaaaaaaakzhfon2xhxveeefpudi6n45te64272ihckrwfnc3tpudcmlqzzuq
      fingerprint: 36:fb:bf:38:5c:79:74:cd:3f:dd:6e:aa:49:81:2b:f2
      api-key: "$(cat your_api_key.pem)"
      bucket-name: mybucket
      namespace: mytenancy
      local-file: mydir/myswagger.json
      overwrite: true
      options: --content-type application/swagger+json
#Deploy our container from the Oracle Container Registry to the Oracle Container Engine (Kubernetes)
deploy-to-cluster:

  steps:

  - bash-template

  - kubectl:
      name: delete secret
      server: $KUBERNETES_MASTER
      token: $KUBERNETES_AUTH_TOKEN
      insecure-skip-tls-verify: true
      command: delete secret wercker; echo delete registry secret

  - kubectl:
      name: create secret
      server: $KUBERNETES_MASTER
      token: $KUBERNETES_AUTH_TOKEN
      insecure-skip-tls-verify: true
      command: create secret docker-registry wercker --docker-server=$DOCKER_REGISTRY --docker-email=nobody@oracle.com --docker-username=$DOCKER_USERNAME --docker-password='$DOCKER_PASSWORD'; echo create registry secret

  - script:
      name: "Visualise Kubernetes config"
      code: cat kubernetes.yml

  - kubectl:
      name: deploy to kubernetes
      server: $KUBERNETES_MASTER
      token: $KUBERNETES_AUTH_TOKEN
      insecure-skip-tls-verify: true
      command: apply -f kubernetes.yml