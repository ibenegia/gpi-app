# This references the default nodejs container from
# the Docker Hub: https://registry.hub.docker.com/_/node/
# If you want Nodesource's container you would reference nodesource/node
# Read more about containers on our dev center
# https://devcenter.wercker.com/overview-and-core-concepts/containers/
box: debian
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# https://devcenter.wercker.com/development/pipelines/

# You can also use services such as databases. Read more on our dev center:
# https://devcenter.wercker.com/administration/services/
# services:
    # - postgres
    # https://devcenter.wercker.com/administration/services/examples/postgresql/

    # - mongo
    # https://devcenter.wercker.com/administration/services/examples/mongodb/
build:
  steps:
    - internal/docker-build:
        dockerfile: Dockerfile
        # image-name: $WERCKER_GIT_BRANCH-$WERCKER_GIT_COMMIT
        image-name: ${DOCKER_REGISTRY}/${DOCKER_REPO}:latest
        ports: 6394
        registry-auth-config: |
            {
                "docker-nexus.labgpi.it": {
                    "username": "oracle.cloud",
                    "password": "ivanbenegiamo"
                }
            }


start-odb:
#Call database api to stop the running node
  steps:
      - nton1/oci-cli@1.6.0:
          command: start-db-node
          region: eu-frankfurt-1
          tenancy-ocid: ocid1.tenancy.oc1..aaaaaaaa2jvfyfoc6c4fzxayx4tnisw4tgdmualsijeglyul4llarzkq2zna
          user-ocid: ocid1.user.oc1..aaaaaaaakzhfon2xhxveeefpudi6n45te64272ihckrwfnc3tpudcmlqzzuq
          fingerprint: e8:33:9d:6a:54:23:cf:79:bf:bc:00:69:ab:00:b1:47
          api-key: "$(cat oci_api_key_wercker.pem)"
          node-id: ocid1.dbnode.oc1.eu-frankfurt-1.abtheljsigqob2ech6clgd6im7o4hn4o2uyhhzelj7ftyhydoqggtcb5f4wq
          database-id: ocid1.database.oc1.eu-frankfurt-1.abtheljsvqnxonamvkhvv4x54giwlay7hu5oqw2e5gu5v5pgghv4u57oaiua

stop-odb:
#Call database api to stop the running node
  steps:
      - nton1/oci-cli@1.6.0:
          command: stop-db-node
          region: eu-frankfurt-1
          tenancy-ocid: ocid1.tenancy.oc1..aaaaaaaa2jvfyfoc6c4fzxayx4tnisw4tgdmualsijeglyul4llarzkq2zna
          user-ocid: ocid1.user.oc1..aaaaaaaakzhfon2xhxveeefpudi6n45te64272ihckrwfnc3tpudcmlqzzuq
          fingerprint: e8:33:9d:6a:54:23:cf:79:bf:bc:00:69:ab:00:b1:47
          api-key: "$(cat oci_api_key_wercker.pem)"
          node-id: ocid1.dbnode.oc1.eu-frankfurt-1.abtheljsigqob2ech6clgd6im7o4hn4o2uyhhzelj7ftyhydoqggtcb5f4wq
          database-id: ocid1.database.oc1.eu-frankfurt-1.abtheljsvqnxonamvkhvv4x54giwlay7hu5oqw2e5gu5v5pgghv4u57oaiua

backup-odb:
#Call database api to stop the running node
  steps:
      - nton1/oci-cli@1.6.0:
          command: backup-db
          region: eu-frankfurt-1
          tenancy-ocid: ocid1.tenancy.oc1..aaaaaaaa2jvfyfoc6c4fzxayx4tnisw4tgdmualsijeglyul4llarzkq2zna
          user-ocid: ocid1.user.oc1..aaaaaaaakzhfon2xhxveeefpudi6n45te64272ihckrwfnc3tpudcmlqzzuq
          fingerprint: e8:33:9d:6a:54:23:cf:79:bf:bc:00:69:ab:00:b1:47
          api-key: "$(cat oci_api_key_wercker.pem)"
          node-id: ocid1.dbnode.oc1.eu-frankfurt-1.abtheljsigqob2ech6clgd6im7o4hn4o2uyhhzelj7ftyhydoqggtcb5f4wq
          database-id: ocid1.database.oc1.eu-frankfurt-1.abtheljsvqnxonamvkhvv4x54giwlay7hu5oqw2e5gu5v5pgghv4u57oaiua
          display-name: ${WERCKER_GIT_COMMIT}


# Deploy our container from the Oracle Container Registry to the Oracle Container Engine (Kubernetes)
deploy-to-cluster:

  steps:

  - bash-template

  - kubectl:
      name: delete secret
      server: $KUBERNETES_MASTER
      token: $KUBERNETES_AUTH_TOKEN
      insecure-skip-tls-verify: true
      command: delete secret wercker; echo delete registry secret

  - kubectl:
      name: create secret
      server: $KUBERNETES_MASTER
      token: $KUBERNETES_AUTH_TOKEN
      insecure-skip-tls-verify: true
      command: create secret docker-registry wercker --docker-server=$DOCKER_REGISTRY --docker-email=nobody@oracle.com --docker-username=$DOCKER_USERNAME --docker-password='$DOCKER_PASSWORD'; echo create registry secret

  - script:
      name: "Visualise Kubernetes config"
      code: cat kubernetes.yml

  - kubectl:
      name: deploy to kubernetes
      server: $KUBERNETES_MASTER
      token: $KUBERNETES_AUTH_TOKEN
      insecure-skip-tls-verify: true
      command: apply -f kubernetes.yml

# Delete deployment from Kubernates cluster
delete-deployment:
  
  steps:
  - bash-template
  - kubectl:
      name: delete deployement from kubernetes
      server: $KUBERNETES_MASTER
      token: $KUBERNETES_AUTH_TOKEN
      insecure-skip-tls-verify: true
      command: delete deployment.apps/genero-v1  service/genero-app-service-v3


